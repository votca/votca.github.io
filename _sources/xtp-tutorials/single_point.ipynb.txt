{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Single Point Energy using `pyxtp`\n",
    "\n",
    "## What this tutorial is about \n",
    "\n",
    "In this tutrial we will learn how to setup a simple single point calculation using the pyton interface to `XTP`, i.e. `pyxtp` and the Atomistic Simulation Environment (ASE). Let's first import the relevant modules:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T05:26:51.107592Z",
     "iopub.status.busy": "2024-09-06T05:26:51.107161Z",
     "iopub.status.idle": "2024-09-06T05:26:51.518332Z",
     "shell.execute_reply": "2024-09-06T05:26:51.517786Z"
    }
   },
   "outputs": [],
   "source": [
    "from pyxtp import xtp, Visualization\n",
    "from ase import Atoms"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##  Define the molecular structure \n",
    "\n",
    "The python interface is built to leverage the ASE molecular structure classes `Atoms` and `Molecule`. Therefore we cam simply define the atomistic structure we want to use via the ASE native functionalities. Let's for example define a `CO` molecule using the `Atoms` ASE class "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T05:26:51.521461Z",
     "iopub.status.busy": "2024-09-06T05:26:51.520846Z",
     "iopub.status.idle": "2024-09-06T05:26:51.524405Z",
     "shell.execute_reply": "2024-09-06T05:26:51.523829Z"
    }
   },
   "outputs": [],
   "source": [
    "atoms = Atoms('CO', positions=([0,0,0],[1.4,0,0]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Instantiate the `xtp` calculator\n",
    "\n",
    "ASE works with so-called calculators that handle the ab-initio calculation. Many quantum chemistry packages have their own dedicated calculators (see the exhaustive list here: https://wiki.fysik.dtu.dk/ase/ase/calculators/calculators.html). 'pyxtp' is nothing more than a dedicated ASE calculator for XTP. It can therefore be used as any other calculator. \n",
    "\n",
    "We first need to instantiate the calcultor. Here we use `nthreads=2` to indicate to the calculator to use two threads to perform the calculation. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T05:26:51.526783Z",
     "iopub.status.busy": "2024-09-06T05:26:51.526488Z",
     "iopub.status.idle": "2024-09-06T05:26:51.531626Z",
     "shell.execute_reply": "2024-09-06T05:26:51.531205Z"
    }
   },
   "outputs": [],
   "source": [
    "calc = xtp(nthreads=2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Configure the `xtp` calculator\n",
    "\n",
    "The `xtp` calculator comes with many options. Those options are precisely those that can be accessed through the different XML files that are used to configure the `dftgwbse` tools of `XTP`. A summary of those options can be found here: https://www.votca.org/xtp/dftgwbse.html. These options can be easily navigated through the `calc.options` and using the autocomplete (tab) functionality. Let's for example change the basis set and auxilliary basis set of the calculations."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T05:26:51.533875Z",
     "iopub.status.busy": "2024-09-06T05:26:51.533697Z",
     "iopub.status.idle": "2024-09-06T05:26:51.536449Z",
     "shell.execute_reply": "2024-09-06T05:26:51.535835Z"
    }
   },
   "outputs": [],
   "source": [
    "calc.options.dftpackage.basisset = 'def2-svp'\n",
    "calc.options.dftpackage.auxbasisset = 'aux-def2-svp'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can also give redirect all the logging output to a dedicated file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T05:26:51.538760Z",
     "iopub.status.busy": "2024-09-06T05:26:51.538565Z",
     "iopub.status.idle": "2024-09-06T05:26:51.541487Z",
     "shell.execute_reply": "2024-09-06T05:26:51.540879Z"
    }
   },
   "outputs": [],
   "source": [
    "calc.options.logging_file = 'CO_energy.log'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Run the calcuation\n",
    "\n",
    "As for any ASE calculator, the `xtp` calculator must be attached to the molecular structure. To do that we simply need to assign our `xtp` calculator to the `calc` attribute of or molecular structure"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T05:26:51.543863Z",
     "iopub.status.busy": "2024-09-06T05:26:51.543675Z",
     "iopub.status.idle": "2024-09-06T05:26:51.546310Z",
     "shell.execute_reply": "2024-09-06T05:26:51.545708Z"
    }
   },
   "outputs": [],
   "source": [
    "atoms.calc = calc"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To run the calculation we can simply call the `.get_potential_energy()` of the molecular structure, and all the rest will be done automatically"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T05:26:51.548774Z",
     "iopub.status.busy": "2024-09-06T05:26:51.548432Z",
     "iopub.status.idle": "2024-09-06T05:26:55.605465Z",
     "shell.execute_reply": "2024-09-06T05:26:55.604835Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Using 2 threads\n",
      "... ... Reading structure from CO.xyz\n",
      "... ... Saving data to CO.orb\n",
      "... ... Writing output to CO_summary.xml"
     ]
    },
    {
     "data": {
      "text/plain": [
       "-113.00304600751411"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "atoms.get_potential_energy()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Visualize the results\n",
    "\n",
    "Several visualisations are directly provided by `pyxtp`. It is for example possible to directly plot the absorption spectrum of the molecular structure assuming a Gaussian broadening of the peaks"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-06T05:26:55.638721Z",
     "iopub.status.busy": "2024-09-06T05:26:55.638384Z",
     "iopub.status.idle": "2024-09-06T05:26:55.828121Z",
     "shell.execute_reply": "2024-09-06T05:26:55.827389Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "viz = Visualization(atoms, save_figure=True)\n",
    "viz.plot_absorption_gaussian()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "votca_test",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
